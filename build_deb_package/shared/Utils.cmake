function(m_get_filepath variable relative_path)
    get_filename_component(_local_variable ${relative_path} REALPATH)
    if(EXISTS ${_local_variable})
        set(${variable} ${_local_variable} PARENT_SCOPE)
    else()
        message(FATAL_ERROR "PATH `${relative_path}` NOT FOUND")
    endif()
    mark_as_advanced(_local_variable)
endfunction()

function(m_check_filepath relative_path)
    m_get_filepath(_local_path ${relative_path})
    mark_as_advanced(_local_path)
endfunction()

function(m_get_architecture variable)
    execute_process(COMMAND dpkg --print-architecture OUTPUT_VARIABLE _local_variable)
    string(STRIP ${_local_variable} _local_variable)
    set(${variable} ${_local_variable} PARENT_SCOPE)
    mark_as_advanced(_local_variable)
endfunction()

function(m_get_os_name variable)
    execute_process(COMMAND lsb_release --id --short OUTPUT_VARIABLE _local_id)
    string(STRIP ${_local_id} _local_id)
    string(TOLOWER  ${_local_id} _local_id)
    execute_process(COMMAND lsb_release --codename --short OUTPUT_VARIABLE _local_codename)
    string(STRIP ${_local_codename} _local_codename)
    string(TOLOWER ${_local_codename} _local_codename)
    set(${variable} "${_local_id}-${_local_codename}" PARENT_SCOPE)
    mark_as_advanced(_local_id _local_codename)
endfunction()